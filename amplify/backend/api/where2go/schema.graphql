input AMPLIFY {
  globalAuthRule: AuthRule = {allow: public}
}

input CreatePlaceInput {
  id: Int
  name: String!
  description: String
  latitude: Float!
  longitude: Float!
  parking: Int
  toilet: Boolean
  createdAt: String
  updatedAt: String
}

type Place {
  id: Int!
  name: String!
  description: String
  latitude: Float!
  longitude: Float!
  parking: Int
  toilet: Boolean
  createdAt: String!
  updatedAt: String!
}

input UpdatePlaceInput {
  id: Int!
  name: String
  description: String
  latitude: Float
  longitude: Float
  parking: Int
  toilet: Boolean
  createdAt: String
  updatedAt: String
}

type Mutation {
  deletePlace(id: Int!): Place
  createPlace(createPlaceInput: CreatePlaceInput!): Place
  updatePlace(updatePlaceInput: UpdatePlaceInput!): Place
}

type Query {
  getPlace(id: Int!): Place
  listPlaces(name: String, neLat: Float, neLng: Float, swLat: Float, swLng: Float): [Place]
}

type Subscription {
  onCreatePlace: Place @aws_subscribe(mutations: ["createPlace"])
}

schema {
  query: Query
  mutation: Mutation
  subscription: Subscription
}
